using System.Collections;

namespace Bootsharp;

/// <summary>
/// Marshalling helpers used under the hood on interop.
/// </summary>
public static class Marshalling
{
    private static readonly List<object> list = [];

    /// <summary>
    /// Marshals a list-like object to array.
    /// </summary>
    public static object MarshalList (object obj)
    {
        list.Clear();

        // Have to resort to enumerable here, because buffer types
        // generated by collection expressions can't be casted to non-generic
        // IList or ICollection, while casting to IReadOnlyCollection<object>
        // won't work for collections where element is of a value type.

        foreach (var element in (IEnumerable)obj)
            list.Add(element);

        return list.ToArray();
    }

    /// <summary>
    /// Marshals a dictionary object to array.
    /// </summary>
    public static object MarshalDictionary (object obj)
    {
        var dict = (IDictionary)obj;
        var raw = new object?[dict.Count];
        var idx = 0;

        foreach (DictionaryEntry entry in dict)
        {
            raw[idx++] = entry.Key;
            raw[idx++] = entry.Value;
        }

        return raw;
    }
}
